<UserControl x:Class="Winhance.WPF.Features.SoftwareApps.Views.SoftwareAppsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:viewModels="clr-namespace:Winhance.WPF.Features.SoftwareApps.ViewModels"
    xmlns:views="clr-namespace:Winhance.WPF.Features.SoftwareApps.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:commonControls="clr-namespace:Winhance.WPF.Features.Common.Controls"
    xmlns:converters="clr-namespace:Winhance.WPF.Features.Common.Converters"
    xmlns:system="clr-namespace:System;assembly=mscorlib" d:DataContext="{d:DesignInstance Type=viewModels:SoftwareAppsViewModel}" mc:Ignorable="d">
    
    <UserControl.Resources>
        <converters:TabViewModelSelector x:Key="TabViewModelSelector"/>
    </UserControl.Resources>

    <Grid>
        <!-- Header -->
        <Grid Height="80" VerticalAlignment="Top" ClipToBounds="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <!-- Icon -->
                <ColumnDefinition Width="*"/>
                <!-- Title and Status -->
                <ColumnDefinition Width="Auto"/>
                <!-- Buttons and Search -->
            </Grid.ColumnDefinitions>

            <!-- Symbol = Deployed Code -->
            <TextBlock Grid.Column="0" Text="&#xF720;" FontFamily="{StaticResource MaterialSymbolsFont}" FontSize="60" Margin="10,0,10,0" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextColor}"/>

            <!-- Title and Status -->
            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                <TextBlock Height="35" VerticalAlignment="Top" FontFamily="Helvetica Neue" FontSize="32" FontWeight="Bold" Foreground="{DynamicResource PrimaryTextColor}" Text="Software &amp; Apps"/>

                <TextBlock Height="22" Margin="0,5,0,0" VerticalAlignment="Bottom" FontFamily="Helvetica Neue" FontSize="14" Foreground="{DynamicResource SubTextColor}" Text="{Binding StatusText}"/>
            </StackPanel>

            <!-- Search Box and Action Buttons (right, prioritized) -->
            <Grid Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10,0,10,0" Panel.ZIndex="100" MinWidth="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- View Mode Toggle Container -->
                <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,10">
                    <TextBlock Text="View mode:" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource PrimaryTextColor}"/>
                    <Border Width="110" Height="35" VerticalAlignment="Center" Background="{DynamicResource MaterialDesignPaper}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- List View Option -->
                            <Border Grid.Column="0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="{DynamicResource MainContainerBorderBrush}" />
                                        <Setter Property="CornerRadius" Value="3,0,0,3" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="True"/>
                                                    <Condition Binding="{Binding WindowsAppsViewModel.IsTableViewMode}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ExternalAppsViewModel.IsPackageManagerViewMode}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Button Style="{StaticResource IconButtonStyle}" Command="{Binding ToggleViewModeCommand}" CommandParameter="False" Padding="0" ToolTip="List View">
                                    <materialDesign:PackIcon Kind="ViewList" Width="20" Height="20">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <!-- Default state (unselected): white icon on gray background -->
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                                                <Style.Triggers>
                                                    <!-- When this view is selected for Windows Apps tab -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="True"/>
                                                            <Condition Binding="{Binding WindowsAppsViewModel.IsTableViewMode}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                                    </MultiDataTrigger>
                                                    <!-- When this view is selected for External Apps tab -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="False"/>
                                                            <Condition Binding="{Binding ExternalAppsViewModel.IsTableViewMode}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                                    </MultiDataTrigger>
                                                    <!-- When hovering over the unselected button -->
                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </Button>
                            </Border>

                            <!-- Table View Option -->
                            <Border Grid.Column="1">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="{DynamicResource MainContainerBorderBrush}" />
                                        <Setter Property="CornerRadius" Value="0,3,3,0" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="True"/>
                                                    <Condition Binding="{Binding WindowsAppsViewModel.IsTableViewMode}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="False"/>
                                                    <Condition Binding="{Binding ExternalAppsViewModel.IsPackageManagerViewMode}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Button Style="{StaticResource IconButtonStyle}" Command="{Binding ToggleViewModeCommand}" CommandParameter="True" Padding="0" ToolTip="Table View">
                                    <materialDesign:PackIcon Kind="ViewModule" Width="20" Height="20">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <!-- Default state (unselected): white icon on gray background -->
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                                                <Style.Triggers>
                                                    <!-- When this view is selected for Windows Apps tab -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="True"/>
                                                            <Condition Binding="{Binding WindowsAppsViewModel.IsTableViewMode}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                                    </MultiDataTrigger>
                                                    <!-- When this view is selected for External Apps tab -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsWindowsAppsTabSelected}" Value="False"/>
                                                            <Condition Binding="{Binding ExternalAppsViewModel.IsTableViewMode}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                                    </MultiDataTrigger>
                                                    <!-- When hovering over the unselected button -->
                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </Button>
                            </Border>
                        </Grid>
                    </Border>
                </StackPanel>

                <!-- Action Buttons on the left -->
                <UniformGrid Grid.Row="1" Grid.Column="0" Rows="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0">
                    <!-- Install Selected Items Button -->
                    <Button Style="{StaticResource InstallAppsButtonStyle}" Content="Install Selected Items" Width="180" Height="35" Margin="0,0,5,1" Command="{Binding InstallSelectedItemsCommand}" IsEnabled="{Binding CanInstallItems}"/>

                    <!-- Remove Selected Items Button (or Clear Selection for External Apps) -->
                    <Button Style="{StaticResource RemoveAppsButtonStyle}" Content="{Binding RemoveButtonText}" Width="180" Height="35" Margin="0,0,0,1" Command="{Binding RemoveSelectedItemsCommand}" IsEnabled="{Binding CanRemoveItems}"/>
                </UniformGrid>

                <!-- Search Box and Help Button on the right -->
                <Grid Grid.Row="1" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Help Button -->
                    <Button Grid.Column="0" x:Name="HelpButton" Content="Help" Width="60" Height="35" Margin="0,0,10,1" Command="{Binding ShowHelpCommand}" VerticalAlignment="Center" Loaded="HelpButton_Loaded">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource HelpButtonStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHelpVisible}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ButtonBorderBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ButtonHoverTextColor}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!-- Search Box -->
                    <commonControls:SearchBox Grid.Column="1" Width="200" HorizontalAlignment="Right" VerticalAlignment="Center" SearchText="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,1"/>
                </Grid>
            </Grid>

        </Grid>

        <!-- Main Content -->
        <Border Margin="0,85,0,0" Background="{DynamicResource MainContainerBorderBrush}" CornerRadius="10">
            <commonControls:ResponsiveScrollViewer Style="{StaticResource ModernScrollViewer}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel Margin="10">
                    <!-- Tabbed Header Section -->
                    <Border Style="{StaticResource AppSectionHeaderStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Windows Apps Tab -->
                            <Grid Grid.Column="0">
                                <!-- Selection Indicator -->
                                <Border Width="3" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{DynamicResource ButtonHoverBackground}" Margin="5,0,0,0" CornerRadius="1.5" Visibility="{Binding IsWindowsAppsTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Panel.ZIndex="1" />

                                <!-- Tab Content -->
                                <Border x:Name="WindowsAppsTab" Cursor="Hand" Background="Transparent" CornerRadius="5">
                                    <Border.Resources>
                                        <Style x:Key="TabHoverStyle" TargetType="Border">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource MainContainerBorderBrush}" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding IsWindowsAppsTabSelected}" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource MainContainerBorderBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Resources>
                                    <Border.Style>
                                        <StaticResource ResourceKey="TabHoverStyle" />
                                    </Border.Style>
                                    <Grid x:Name="WindowsAppsTabGrid">
                                        <!-- Inner border for selected tab or hover -->
                                        <Border x:Name="WindowsAppsInnerBorder" Margin="4" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource MainContainerBorderBrush}" Background="{DynamicResource MainContainerBorderBrush}">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsWindowsAppsTabSelected}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=WindowsAppsTab, Path=IsMouseOver}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <materialDesign:PackIcon Kind="MicrosoftWindows" Width="24" Height="24" Margin="10,0,5,0" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextColor}"/>
                                            <TextBlock Text="Windows Apps &amp; Features" Style="{StaticResource AppSectionHeaderTextStyle}" Margin="0,0,10,0"/>
                                        </DockPanel>
                                    </Grid>
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding SelectTabCommand}" CommandParameter="{x:Static system:Boolean.TrueString}" />
                                    </Border.InputBindings>
                                </Border>
                            </Grid>

                            <!-- Separator -->
                            <Border Grid.Column="1" Width="1" Height="25" Margin="0,5" VerticalAlignment="Stretch" Background="#AAAAAA"/>

                            <!-- External Software Tab -->
                            <Grid Grid.Column="2">
                                <!-- Selection Indicator -->
                                <Border Width="3" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{DynamicResource ButtonHoverBackground}" Margin="5,0,0,0" CornerRadius="1.5" Visibility="{Binding IsExternalAppsTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Panel.ZIndex="1" />

                                <!-- Tab Content -->
                                <Border x:Name="ExternalAppsTab" Cursor="Hand" Background="Transparent" CornerRadius="5">
                                    <Border.Resources>
                                        <Style x:Key="TabHoverStyle" TargetType="Border">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource MainContainerBorderBrush}" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding IsExternalAppsTabSelected}" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource MainContainerBorderBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Resources>
                                    <Border.Style>
                                        <StaticResource ResourceKey="TabHoverStyle" />
                                    </Border.Style>
                                    <Grid x:Name="ExternalAppsTabGrid">
                                        <!-- Inner border for selected tab or hover -->
                                        <Border x:Name="ExternalAppsInnerBorder" Margin="4" CornerRadius="3" BorderThickness="1" BorderBrush="{DynamicResource MainContainerBorderBrush}" Background="{DynamicResource MainContainerBorderBrush}">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsExternalAppsTabSelected}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=ExternalAppsTab, Path=IsMouseOver}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <TextBlock Text="&#xF5F4;" FontFamily="{StaticResource MaterialSymbolsFont}" FontSize="24" Margin="10,0,5,0" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextColor}"/>
                                            <TextBlock Text="External Software" Style="{StaticResource AppSectionHeaderTextStyle}" Margin="0,0,10,0"/>
                                        </DockPanel>
                                    </Grid>
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding SelectTabCommand}" CommandParameter="{x:Static system:Boolean.FalseString}" />
                                    </Border.InputBindings>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>

                    <!-- Content Section -->
                    <Border Style="{StaticResource AppSectionContentBorderStyle}">
                        <Grid>
                            <!-- Windows Apps Content -->
                            <ContentControl Visibility="{Binding WindowsAppsContentVisibility}">
                                <views:WindowsAppsView DataContext="{Binding WindowsAppsViewModel}"/>
                            </ContentControl>

                            <!-- External Apps Content - Switch between views based on view mode -->
                            <ContentControl Visibility="{Binding ExternalAppsContentVisibility}">
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExternalAppsViewModel.IsPackageManagerViewMode}" Value="True">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <views:ExternalAppsPackageManagerView DataContext="{Binding ExternalAppsViewModel.ExternalAppsPackageManagerViewModel}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ExternalAppsViewModel.IsPackageManagerViewMode}" Value="False">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <views:ExternalAppsView DataContext="{Binding ExternalAppsViewModel}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </Grid>
                    </Border>
                </StackPanel>
            </commonControls:ResponsiveScrollViewer>
        </Border>
    </Grid>
</UserControl>
